Option, ECHO=TRUE;
//////////////////////////////////////////////////////////////////////////////
// Input file for single bunch tracking through ERIT FFA ring              //
//////////////////////////////////////////////////////////////////////////////
Title,string="Small ring using OPAL code";
Option, ASCIIDUMP=TRUE;
Option, ENABLEHDF5=FALSE;
OPTION, PSDUMPFREQ=100000;
Option, VERSION=10900;
Option, SPTDUMPFREQ=1;
Option, STATDUMPFREQ=100000;

//////////// BEAM PARAMETERS //////////////////
REAL E0 = __energy__/1000; // [GeV]
REAL BEAM_THETA_INIT=__beam_theta__; // fraction of E0
REAL BEAM_PHI_INIT=__beam_phi_init__; // [fraction of cell length]; 0 is on PROBE01
REAL BEAM_CHARGE=__beam_charge__; // [fraction of cell length]; 0 is on PROBE01
REAL LATTICE_PHI_OFFSET=__lattice_phi_offset__; // [fraction of cell length]; 0 means centre of cell lines up with phi = 0.

//////////// PROBES /////////////////////
REAL CELL_PROBE_OFFSET=5; // [number of cells]
REAL PHI_TEST_PROBE=__test_probe__; // [number of cells]

/////////// MAIN MAGNET //////////////////////
REAL FFA_B_MEAN = __b_mean__; // [T]; mean field over the entire cell at R0
REAL FFA_DF_RATIO=__df_ratio__; // []; BD/BF
REAL FFA_F_LENGTH=__f_length__; // [fraction of cell length]
REAL FFA_D_LENGTH=__d_length__; // [fraction of cell length]
REAL FFA_TAN_DELTA=__tan_delta__; // []
REAL FFA_FIELD_INDEX=__field_index__; // []
REAL FFA_MAX_Y_POWER=__max_y_power__; // []
REAL FFA_F_END_LENGTH=__f_end_length__; // [] end length in multiples of centre length
REAL FFA_D_END_LENGTH=__d_end_length__; // [] end length in multiples of centre length
REAL FFA_NEG_EXTENT=__neg_extent__; // [m]
REAL FFA_POS_EXTENT=__pos_extent__; // [m]

///////////// RF //////////////////////////////
REAL FFA_RF_VOLTAGE=__rf_voltage__; // [kV] total field in the FFA
REAL FFA_RF_PHASE=__rf_phase__; // [rad] RF phase
REAL FFA_RF_FREQ_0=__rf_freq_0__; // [MHz]
REAL FFA_RF_FREQ_1=__rf_freq_1__; // [MHz/ns^1]
REAL FFA_RF_FREQ_2=__rf_freq_2__; // [MHz/ns^2]
REAL FFA_RF_FREQ_3=__rf_freq_3__; // [MHz/ns^3]
REAL CAVITY_ANGLE=__cavity_angle__; // [rad]
// also __cavity__; // soft_cavity, hard_cavity, radial_cavity, no_cavity

///////////// BUMP MAGNETS ////////////////////
REAL BUMP_LENGTH=__bump_length__; // [m]
REAL BUMP_RADIAL_OFFSET=__bump_offset__; // [m]
REAL PHI_FOIL_PROBE=__phi_foil_probe__; // [fraction of cell length]
REAL PHI_BUMP_1=__phi_bump_1__; // [fraction of cell length]
REAL PHI_BUMP_2=__phi_bump_2__; // [fraction of cell length]
REAL PHI_BUMP_3=__phi_bump_3__; // [fraction of cell length]
REAL PHI_BUMP_4=__phi_bump_4__; // [fraction of cell length]
REAL BUMP_FIELD_1=__bump_field_1__; // [kGauss]
REAL BUMP_FIELD_2=__bump_field_2__; // [kGauss]
REAL BUMP_FIELD_3=__bump_field_3__; // [kGauss]
REAL BUMP_FIELD_4=__bump_field_4__; // [kGauss]
REAL BUMP_WIDTH=__bump_width__; // [m]
REAL BUMP_ANGLE=__bump_angle__; // [degree]
REAL BUMP_FRINGE=__bump_fringe__; // [fraction of bump_length]
REAL SEPTUM_FIELD=__septum_field__; // [T]

/////////////////// GENERAL ////////////////////////////////////

REAL R0 = 4.;
REAL N_CELLS=15; // NOTE!! If you change the number of cells, you must *by hand*
                 // change the number of ringprobes
REAL FFA_CELL_LENGTH=2*PI/N_CELLS;
REAL CO_OFFSET = -1*R0;
REAL MILLIMETRE = 1.0;
REAL RADIANS = PI/180;
REAL RMIN=R0-2.0;
REAL RMAX=R0+2.0;
REAL BEAM_PHI_INIT_RAD=FFA_CELL_LENGTH*BEAM_PHI_INIT*180/PI;


/////////////////// RING PROBES //////////////////////////////////
REAL RING_PROBE_PHI_OFFSET=0.0;
REAL PROBE_PHI=(+2.)*PI/N_CELLS*(1.0+RING_PROBE_PHI_OFFSET);
BUILD_PROBE(NAME, ANGLE): MACRO {
    NAME: PROBE, xstart=RMIN*1000*cos(ANGLE),  xend=RMAX*1000*cos(ANGLE),  ystart=RMIN*1000*sin(ANGLE),  yend=RMAX*1000*sin(ANGLE);
}

REAL THIS_PROBE_PHI=BEAM_PHI_INIT_RAD;
BUILD_PROBE(RingProbe01, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe02, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe03, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe04, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe05, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe06, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe07, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe08, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe09, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe10, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe11, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe12, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe13, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe14, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);
BUILD_PROBE(RingProbe15, THIS_PROBE_PHI);
THIS_PROBE_PHI = EVAL(THIS_PROBE_PHI+2.*PI/N_CELLS);

ringprobe: Line = (RingProbe01, RingProbe02, RingProbe03, RingProbe04, RingProbe05, 
                   RingProbe06, RingProbe07, RingProbe08, RingProbe09, RingProbe10,
                   RingProbe11, RingProbe12, RingProbe13, RingProbe14, RingProbe15);

/////////////////// CELL PROBES //////////////////////////////////

REAL PROBE_OFF=(+2.)*PI/N_CELLS*CELL_PROBE_OFFSET;
REAL PROBE_DELTA_PHI=(+2.)*PI/N_CELLS/20;
REAL PROBE_PHI=0*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe01: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=1*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe02: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=2*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe03: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=3*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe04: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=4*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe05: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=5*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe06: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=6*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe07: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=7*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe08: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=8*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe09: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=9*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe10: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=10*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe11: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=11*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe12: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=12*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe13: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=13*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe14: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=14*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe15: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=15*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe16: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=16*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe17: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=17*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe18: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=18*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe19: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=19*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe20: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);
REAL PROBE_PHI=20*PROBE_DELTA_PHI+PROBE_OFF;
CellProbe21: PROBE, xstart=RMIN*1000*cos(PROBE_PHI),  xend=RMAX*1000*cos(PROBE_PHI),  ystart=RMIN*1000*sin(PROBE_PHI),  yend=RMAX*1000*sin(PROBE_PHI);

cellprobe: Line = (CellProbe01, CellProbe02, CellProbe03, CellProbe04, CellProbe05, 
                   CellProbe06, CellProbe07, CellProbe08, CellProbe09, CellProbe10,
                   CellProbe11, CellProbe12, CellProbe13, CellProbe14, CellProbe15,
                   CellProbe16, CellProbe17, CellProbe18, CellProbe19, CellProbe20,
                   CellProbe21);

/////////////////// TEST PROBE ///////////////////////////////////

REAL PHI_TEST_PROBE_RAD=PHI_TEST_PROBE*FFA_CELL_LENGTH;
value, {PHI_TEST_PROBE_RAD};

TestProbe: PROBE, xstart=RMIN*1000*cos(PHI_TEST_PROBE_RAD),  xend=RMAX*1000*cos(PHI_TEST_PROBE_RAD),  
                  ystart=RMIN*1000*sin(PHI_TEST_PROBE_RAD),  yend=RMAX*1000*sin(PHI_TEST_PROBE_RAD);



/////////////////// MAIN MAGNETS //////////////////////////////////

// Aim is that DF ratio controls relative amount of bend out vs bend in (and associated quad strengths)
// independent of the magnet length parameters
// * B_MEAN controls the total dipole field;
// * DF_RATIO controls the relative amount of vertical vs horizontal focussing
// * FIELD_INDEX controls the focusing strength of each magnet and width of the magnet
// * TAN_DELTA controls tan delta
// * END_LENGTH and MAX_Y_POWER control the degree of non-linearity
// * DF_RATIO, END_LENGTH and TAN_DELTA also control the vertical tune 
// * RF_VOLTAGE, RF_PHASE controls the RF voltage and phase

// length
REAL FFA_F_CENTRE_LENGTH=FFA_CELL_LENGTH*FFA_F_LENGTH;
REAL FFA_D_CENTRE_LENGTH=FFA_CELL_LENGTH*FFA_D_LENGTH;
// field magnitude
REAL FFA_BF=FFA_B_MEAN/(FFA_F_LENGTH+FFA_DF_RATIO*FFA_D_LENGTH);
REAL FFA_BD=FFA_DF_RATIO*FFA_BF;

// Magnet has 2 end lengths; then a centre length; then 2 end lengths
// If STAY_CLEAR=0 then B = B0/2. at the start/end of the magnet
REAL STAY_CLEAR = 2;
REAL START_D = FFA_D_CENTRE_LENGTH*FFA_D_END_LENGTH*STAY_CLEAR;
REAL END_D = FFA_D_CENTRE_LENGTH*(1+FFA_D_END_LENGTH*STAY_CLEAR*2);
REAL START_F = FFA_F_CENTRE_LENGTH*FFA_F_END_LENGTH*STAY_CLEAR;
REAL END_F = FFA_F_CENTRE_LENGTH*(1+FFA_F_END_LENGTH*STAY_CLEAR*2);
REAL D_PHI_DRIFT = (FFA_CELL_LENGTH-END_F- END_D)/2; //
// Bounding box extends for 0.5 centre length + 8 end lengths in each direction
REAL BB = 16;
REAL FFA_D_AZIMUTHAL_EXTENT = FFA_D_CENTRE_LENGTH*(0.5+FFA_D_END_LENGTH*BB);
REAL FFA_F_AZIMUTHAL_EXTENT = FFA_F_CENTRE_LENGTH*(0.5+FFA_F_END_LENGTH*BB);

REAL DX_DRIFT = R0*sin(D_PHI_DRIFT);
REAL DY_DRIFT = R0*(1-cos(D_PHI_DRIFT));
REAL DXN_DRIFT = cos(D_PHI_DRIFT);
REAL DYN_DRIFT = sin(D_PHI_DRIFT);

REAL M_P = 0.93827208; // GeV/c^2
REAL P0 = ((E0+M_P)^2-M_P^2)^0.5; // GeV/c

value, {P0, E0, M_P};

REAL C_LIGHT = 300.; // MM/NS

REAL STEP_SIZE_MM = __step_size__; //*STEP_SIZE_NS;
REAL STEP_SIZE_NS = STEP_SIZE_MM/(P0/E0*C_LIGHT);

REAL STEPS_PER_TURN = 2*PI*R0*1000./STEP_SIZE_MM*10./25.; //1000000;
REAL MAX_STEPS = __n_turns__*STEPS_PER_TURN*3.;
REAL BFREQ = 1.e3/STEPS_PER_TURN/STEP_SIZE_NS*3.18658692e-05*100.;

value, {BFREQ, STEP_SIZE_NS, STEP_SIZE_MM, MAX_STEPS, STEPS_PER_TURN};

value, {START_D, END_D, FFA_D_CENTRE_LENGTH, FFA_BD};
value, {START_F, END_F, FFA_F_CENTRE_LENGTH, FFA_BF};
REAL DF_RATIO = FFA_BD/FFA_BF;
REAL MEAN_B = (FFA_BD*FFA_D_CENTRE_LENGTH + FFA_BF*FFA_F_CENTRE_LENGTH)/FFA_CELL_LENGTH;
value, {DF_RATIO, MEAN_B};
value, {D_PHI_DRIFT, DX_DRIFT, DY_DRIFT, DXN_DRIFT, DYN_DRIFT};

REAL SIN_CAV=sin(CAVITY_ANGLE);
REAL COS_CAV=cos(CAVITY_ANGLE);

ringdef: RINGDEFINITION, HARMONIC_NUMBER=1, LAT_RINIT=R0, LAT_PHIINIT=0,
         LAT_THETAINIT=0.0, BEAM_PHIINIT=BEAM_PHI_INIT_RAD, BEAM_PRINIT=BEAM_THETA_INIT,
         BEAM_RINIT=R0+CO_OFFSET, SYMMETRY=1, RFFREQ=1, IS_CLOSED=false,
         MIN_R=R0-2, MAX_R=R0+2;

halfDrift: LOCAL_CARTESIAN_OFFSET, end_position_x=DX_DRIFT*MILLIMETRE,
                                   end_position_y=DY_DRIFT*MILLIMETRE,
                                   end_normal_x=DXN_DRIFT,
                                   end_normal_y=DYN_DRIFT;
magnetD: ScalingFFAMagnet, B0=FFA_BD,
                            R0=R0,
                            FIELD_INDEX=FFA_FIELD_INDEX,
                            TAN_DELTA=FFA_TAN_DELTA, 
                            MAX_Y_POWER=FFA_MAX_Y_POWER,
                            CENTRE_LENGTH=R0*FFA_D_CENTRE_LENGTH,
                            END_LENGTH=R0*FFA_D_CENTRE_LENGTH*FFA_D_END_LENGTH,
                            RADIAL_NEG_EXTENT=FFA_NEG_EXTENT,
                            RADIAL_POS_EXTENT=FFA_POS_EXTENT,
                            MAGNET_START=R0*START_D,
                            MAGNET_END=R0*END_D,
                            HEIGHT=1.,
                            AZIMUTHAL_EXTENT=R0*FFA_D_AZIMUTHAL_EXTENT;
magnetF: ScalingFFAMagnet, B0=FFA_BF,
                            R0=R0,
                            FIELD_INDEX=FFA_FIELD_INDEX,
                            TAN_DELTA=FFA_TAN_DELTA,
                            MAX_Y_POWER=FFA_MAX_Y_POWER,
                            CENTRE_LENGTH=R0*FFA_F_CENTRE_LENGTH,
                            END_LENGTH=R0*FFA_F_CENTRE_LENGTH*FFA_F_END_LENGTH,
                            RADIAL_NEG_EXTENT=FFA_NEG_EXTENT,
                            RADIAL_POS_EXTENT=FFA_POS_EXTENT,
                            MAGNET_START=R0*START_F,
                            MAGNET_END=R0*END_F,
                            HEIGHT=1.,
                            AZIMUTHAL_EXTENT=R0*FFA_F_AZIMUTHAL_EXTENT;


////////////////////////// RF CAVITY ///////////////////////////

rf_frequency: POLYNOMIAL_TIME_DEPENDENCE, P0=FFA_RF_FREQ_0, P1=FFA_RF_FREQ_1, P2=FFA_RF_FREQ_2, P3=FFA_RF_FREQ_3;
rf_amplitude: POLYNOMIAL_TIME_DEPENDENCE, P0=FFA_RF_VOLTAGE/100; // V*1e-2 MV/m, 100 mm long cavity => V kV total
rf_phase: POLYNOMIAL_TIME_DEPENDENCE, P0=FFA_RF_PHASE;
hard_cavity_drift: LOCAL_CARTESIAN_OFFSET,
              end_position_x=-0.050*MILLIMETRE, end_position_y=0.*MILLIMETRE,
              end_normal_x=1., end_normal_y=0.; // go back to start of cavity
hard_rf_cavity: VARIABLE_RF_CAVITY, PHASE_MODEL="RF_PHASE", AMPLITUDE_MODEL="RF_AMPLITUDE", 
           FREQUENCY_MODEL="RF_FREQUENCY", L=0.100*MILLIMETRE, HEIGHT=1.*MILLIMETRE,
           WIDTH=3.*MILLIMETRE;
soft_cavity_drift_tilt: LOCAL_CARTESIAN_OFFSET,
              end_position_x=-0.100*MILLIMETRE, end_position_y=0.*MILLIMETRE,
              end_normal_x=COS_CAV, end_normal_y=SIN_CAV; // step back half gap and then rotate
soft_rf_cavity: VARIABLE_RF_CAVITY_FRINGE_FIELD, PHASE_MODEL="RF_PHASE", AMPLITUDE_MODEL="RF_AMPLITUDE", 
           FREQUENCY_MODEL="RF_FREQUENCY", L=0.200, HEIGHT=1., WIDTH=3.,
           CENTRE_LENGTH=0.100, END_LENGTH=0.010, CAVITY_CENTRE=0.100, MAX_ORDER=4;
soft_cavity_drift_untilt: LOCAL_CARTESIAN_OFFSET,
              end_position_x=-0.200*MILLIMETRE, end_position_y=0.*MILLIMETRE,
              end_normal_x=COS_CAV, end_normal_y=-SIN_CAV; // go back to start of cavity and then rotate back
soft_cavity_drift_back: LOCAL_CARTESIAN_OFFSET,
              end_position_x=0.100*MILLIMETRE, end_position_y=0.*MILLIMETRE,
              end_normal_x=1.0, end_normal_y=0.0; // go to middle of cavity

soft_cavity: Line = (soft_cavity_drift_tilt, soft_rf_cavity, 
                     soft_cavity_drift_back, soft_cavity_drift_untilt);

no_cavity: Line = (soft_cavity_drift_tilt, soft_cavity_drift_untilt);

///////////////////// RADIAL CAVITY ///////////////////////////

REAL RADIAL_RF_F=FFA_RF_FREQ_0;
radial_cavity_drift: LOCAL_CARTESIAN_OFFSET,
              end_position_x=-0.050*MILLIMETRE, end_position_y=0.*MILLIMETRE,
              end_normal_x=1.0, end_normal_y=0.0; // step back half gap and then rotate
//radial_rf_cavity_0: RADIAL_PROFILE_RF_CAVITY, PHASE=FFA_RF_PHASE+0.,
//                  FREQUENCY=RADIAL_RF_F, L=100.0, HEIGHT=100., PROFILE_FILENAME="radial_voltage_dependence_0.out";
//radial_rf_cavity_1: RADIAL_PROFILE_RF_CAVITY, PHASE=FFA_RF_PHASE+0.25,
//                  FREQUENCY=RADIAL_RF_F, L=100.0, HEIGHT=100., PROFILE_FILENAME="radial_voltage_dependence_1.out";
//radial_rf_cavity_2: RADIAL_PROFILE_RF_CAVITY, PHASE=FFA_RF_PHASE+0.5,
//                  FREQUENCY=RADIAL_RF_F, L=100.0, HEIGHT=100., PROFILE_FILENAME="radial_voltage_dependence_2.out";
//radial_rf_cavity_3: RADIAL_PROFILE_RF_CAVITY, PHASE=FFA_RF_PHASE+0.75,
//                  FREQUENCY=RADIAL_RF_F, L=100.0, HEIGHT=100., PROFILE_FILENAME="radial_voltage_dependence_3.out";
//
//radial_cavity: Line = (
//    radial_cavity_drift, radial_rf_cavity_0, radial_cavity_drift
//  , radial_cavity_drift, radial_rf_cavity_1, radial_cavity_drift
//  , radial_cavity_drift, radial_rf_cavity_2, radial_cavity_drift
//  , radial_cavity_drift, radial_rf_cavity_3, radial_cavity_drift
//);

/////////////////////// BUMP /////////////////////////////////

REAL PHI_FOIL_PROBE_RAD=PHI_FOIL_PROBE*FFA_CELL_LENGTH;
value, {PHI_FOIL_PROBE_RAD};

FoilProbe: PROBE, xstart=RMIN*1000*cos(PHI_FOIL_PROBE_RAD),  xend=RMAX*1000*cos(PHI_FOIL_PROBE_RAD),  
                  ystart=RMIN*1000*sin(PHI_FOIL_PROBE_RAD),  yend=RMAX*1000*sin(PHI_FOIL_PROBE_RAD);

REAL BUMP_FRINGE_LENGTH=BUMP_FRINGE*BUMP_LENGTH;
REAL BUMP_ANGLE_RAD=BUMP_ANGLE/180*PI;

magnetBump1: MultipoleT, L=BUMP_LENGTH,
                 RFRINGE=BUMP_FRINGE_LENGTH,
                 LFRINGE=BUMP_FRINGE_LENGTH,
                 HAPERT=BUMP_WIDTH,
                 VAPERT=0.2,
                 ANGLE=0.0,
                 TP={ BUMP_FIELD_1 },
                 BBLENGTH=2*BUMP_LENGTH,
                 MAXFORDER=3,
                 MAXXORDER=3,
                 VARRADIUS=FALSE;

magnetBump2: MultipoleT, L=BUMP_LENGTH,
                 RFRINGE=BUMP_FRINGE_LENGTH,
                 LFRINGE=BUMP_FRINGE_LENGTH,
                 HAPERT=BUMP_WIDTH,
                 VAPERT=0.2,
                 ANGLE=0.0,
                 TP={ BUMP_FIELD_2 },
                 BBLENGTH=2*BUMP_LENGTH,
                 MAXFORDER=3,
                 MAXXORDER=3,
                 VARRADIUS=FALSE;

magnetBump3: MultipoleT, L=BUMP_LENGTH,
                 RFRINGE=BUMP_FRINGE_LENGTH,
                 LFRINGE=BUMP_FRINGE_LENGTH,
                 HAPERT=BUMP_WIDTH,
                 VAPERT=0.2,
                 ANGLE=0.0,
                 TP={ BUMP_FIELD_3 },
                 BBLENGTH=2*BUMP_LENGTH,
                 MAXFORDER=3,
                 MAXXORDER=3,
                 VARRADIUS=FALSE;

magnetBump4: MultipoleT, L=BUMP_LENGTH,
                 RFRINGE=BUMP_FRINGE_LENGTH,
                 LFRINGE=BUMP_FRINGE_LENGTH,
                 HAPERT=BUMP_WIDTH,
                 VAPERT=0.2,
                 ANGLE=0.0,
                 TP={ BUMP_FIELD_4 },
                 BBLENGTH=2*BUMP_LENGTH,
                 MAXFORDER=3,
                 MAXXORDER=3,
                 VARRADIUS=FALSE;

REAL SEPTUM_LENGTH=0.15; // m
REAL SEPTUM_FRINGE_LENGTH=0.1*SEPTUM_LENGTH; // m
REAL SEPTUM_WIDTH=0.1; // m
REAL SEPTUM_RADIUS=3.9; // m
REAL SEPTUM_OFFSET_DISTANCE=0.05; // m
REAL PHI_SEPTUM=PHI_BUMP_2+0.2;

magnetSeptum: MultipoleT, L=SEPTUM_LENGTH,
              RFRINGE=SEPTUM_FRINGE_LENGTH,
              LFRINGE=SEPTUM_FRINGE_LENGTH,
              HAPERT=SEPTUM_WIDTH,
              VAPERT=0.2,
              ANGLE=0.0,
              TP={ SEPTUM_FIELD },
              BBLENGTH=2*SEPTUM_LENGTH,
              MAXFORDER=3,
              MAXXORDER=3,
              VARRADIUS=FALSE;

bump_drift_tilt: LOCAL_CARTESIAN_OFFSET,
              end_position_x=0.0,
              end_position_y=0.0,
              end_normal_x=cos(BUMP_ANGLE_RAD),
              end_normal_y=sin(BUMP_ANGLE_RAD); // tilt the bump magnet
bump_drift_back: LOCAL_CARTESIAN_OFFSET,
              end_position_x=-4*BUMP_LENGTH*MILLIMETRE,
              end_position_y=0.0,
              end_normal_x=0.0,
              end_normal_y=0.0; // go back to start of magnet
bump_drift_untilt: LOCAL_CARTESIAN_OFFSET,
              end_position_x=0.0,
              end_position_y=0.0,
              end_normal_x=cos(BUMP_ANGLE_RAD),
              end_normal_y=-sin(BUMP_ANGLE_RAD); // untilt the bump magnet

REAL BUMP_CELL_OFFSET = 1.25;
REAL PHI_BUMP_1_RAD=(BUMP_CELL_OFFSET+PHI_BUMP_1)*FFA_CELL_LENGTH;
bump_drift_1: LOCAL_CARTESIAN_OFFSET,
              end_position_x=R0*sin(PHI_BUMP_1_RAD)*MILLIMETRE,
              end_position_y=R0*(1-cos(PHI_BUMP_1_RAD))*MILLIMETRE,
              end_normal_x=cos(PHI_BUMP_1_RAD),
              end_normal_y=sin(PHI_BUMP_1_RAD); // drift to next bump magnet

REAL PHI_BUMP_2_RAD=(-PHI_BUMP_1+PHI_BUMP_2)*FFA_CELL_LENGTH;
bump_drift_2: LOCAL_CARTESIAN_OFFSET,
              end_position_x=R0*sin(PHI_BUMP_2_RAD)*MILLIMETRE+BUMP_RADIAL_OFFSET*sin(PHI_BUMP_2_RAD)*MILLIMETRE,
              end_position_y=R0*(1-cos(PHI_BUMP_2_RAD))*MILLIMETRE-BUMP_RADIAL_OFFSET*cos(PHI_BUMP_2_RAD)*MILLIMETRE,
              end_normal_x=cos(PHI_BUMP_2_RAD),
              end_normal_y=sin(PHI_BUMP_2_RAD); // drift to next bump magnet

REAL PHI_BUMP_3_RAD=(-PHI_BUMP_2+PHI_BUMP_3)*FFA_CELL_LENGTH;
bump_drift_3: LOCAL_CARTESIAN_OFFSET,
              end_position_x= (R0+BUMP_RADIAL_OFFSET)*sin(PHI_BUMP_3_RAD)*MILLIMETRE,
              end_position_y=(R0+BUMP_RADIAL_OFFSET)*(1-cos(PHI_BUMP_3_RAD))*MILLIMETRE,
              end_normal_x=cos(PHI_BUMP_3_RAD),
              end_normal_y=sin(PHI_BUMP_3_RAD); // drift to next bump magnet

REAL PHI_BUMP_4_RAD=(-PHI_BUMP_3+PHI_BUMP_4)*FFA_CELL_LENGTH;
bump_drift_4: LOCAL_CARTESIAN_OFFSET,
              end_position_x= R0*sin(PHI_BUMP_4_RAD)*MILLIMETRE-BUMP_RADIAL_OFFSET*sin(PHI_BUMP_4_RAD)*MILLIMETRE,
              end_position_y=R0*(1-cos(PHI_BUMP_4_RAD))*MILLIMETRE+BUMP_RADIAL_OFFSET*cos(PHI_BUMP_4_RAD)*MILLIMETRE,
              end_normal_x=cos(PHI_BUMP_4_RAD),
              end_normal_y=sin(PHI_BUMP_4_RAD);

REAL PHI_SEPTUM_RAD=(-PHI_BUMP_4+PHI_SEPTUM)*FFA_CELL_LENGTH;
septum_drift: LOCAL_CARTESIAN_OFFSET,
              end_position_x=R0*sin(PHI_SEPTUM_RAD)*MILLIMETRE,
              end_position_y=R0*(1-cos(PHI_SEPTUM_RAD))*MILLIMETRE,
              end_normal_x=cos(PHI_SEPTUM_RAD),
              end_normal_y=sin(PHI_SEPTUM_RAD); // drift to next bump magnet

septum_offset: LOCAL_CARTESIAN_OFFSET,
              end_position_x=0,
              end_position_y=SEPTUM_OFFSET_DISTANCE*MILLIMETRE,
              end_normal_x=1,
              end_normal_y=0; // radial offset

bump: Line = (bump_drift_1, bump_drift_tilt, magnetBump1, bump_drift_back, bump_drift_untilt,
              bump_drift_2, bump_drift_tilt, magnetBump2, bump_drift_back, bump_drift_untilt,
              bump_drift_3, bump_drift_tilt, magnetBump3, bump_drift_back, bump_drift_untilt,
              bump_drift_4, bump_drift_tilt, magnetBump4, bump_drift_back, bump_drift_untilt,
              septum_drift, septum_offset, magnetSeptum, 
              FoilProbe);

///////////// FIELD OUTPUT ////////////////////////////////////////////////////

REAL MAP_NR_STEPS=400;
REAL MAP_R_STEP=(FFA_POS_EXTENT+FFA_NEG_EXTENT)/MAP_NR_STEPS;

__no_field_maps__DUMPFIELDS, X_START=-5., X_STEPS=501, DX=0.02, Y_START=-5., Y_STEPS=501, DY=0.02, Z_START=0.001, Z_STEPS=1, DZ=0.100, FILE_NAME="FieldMapXY.dat";
//__no_field_maps__DUMPFIELDS, X_START=0.6, X_STEPS=502, DX=0.004, Y_START=3.6, Y_STEPS=502, DY=0.001, Z_START=0, Z_STEPS=1, DZ=0.100, FILE_NAME="FieldMapXY-zoom.dat";
__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0-FFA_NEG_EXTENT, R_STEPS=MAP_NR_STEPS, DR=MAP_R_STEP, PHI_START=-24.*RADIANS, PHI_STEPS=24.*8*4, DPHI=0.25*RADIANS, Z_START=0, Z_STEPS=1, DZ=0.100, T_START=0, T_STEPS=1, DT=1., FILE_NAME="FieldMapRPHI.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0-0.1, R_STEPS=300, DR=1.e-3, PHI_START=45.*RADIANS, PHI_STEPS=481, DPHI=1./480*30*RADIANS, Z_START=0.01, Z_STEPS=1, DZ=0.100, T_START=0, T_STEPS=1, DT=1., FILE_NAME="FieldMapRPHI_Offset.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=0.*RADIANS, PHI_STEPS=360*100, DPHI=0.01*RADIANS, Z_START=0, Z_STEPS=1, DZ=0.100, T_START=100., T_STEPS=1, DT=1., FILE_NAME="FieldMapAzimuthal.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=90.71*RADIANS,  PHI_STEPS=3,   DPHI=0.72*RADIANS,    Z_START=-0.2, Z_STEPS=41, DZ=0.0100, T_START=100., T_STEPS=1, DT=2., FILE_NAME="FieldMapRfVertical.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=0., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf1.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=100000., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf2.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=200000., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf3.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=300000., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf4.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=400000., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf5.dat";
//__no_field_maps__DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=1, DR=1.e-3, PHI_START=91.33*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=500000., T_STEPS=1000, DT=2., FILE_NAME="FieldMapRf6.dat";
DUMPEMFIELDS, COORDINATE_SYSTEM=CYLINDRICAL, R_START=R0, R_STEPS=80, DR=0.01, PHI_START=0.*RADIANS,  PHI_STEPS=1,   DPHI=1*RADIANS,    Z_START=0, Z_STEPS=1, DZ=0.100, T_START=0., T_STEPS=1, DT=2., FILE_NAME="ProbeField.dat";


REAL D_PHI_LATT=LATTICE_PHI_OFFSET*FFA_CELL_LENGTH;
REAL DX_LATT = R0*sin(D_PHI_LATT);
REAL DY_LATT = R0*(1-cos(D_PHI_LATT));
REAL DXN_LATT = cos(D_PHI_LATT);
REAL DYN_LATT = sin(D_PHI_LATT);
latticeOffset: LOCAL_CARTESIAN_OFFSET, end_position_x=DX_LATT*MILLIMETRE,
                                       end_position_y=DY_LATT*MILLIMETRE,
                                       end_normal_x=DXN_LATT,
                                       end_normal_y=DYN_LATT;

cell: Line = (halfDrift, magnetF, magnetD, halfDrift);
l1: Line = (ringdef,
            latticeOffset,
            cell, cell, cell, cell, cell,
            cell, cell, cell, cell, cell,
            cell, cell, cell, cell, cell
            //, __cavity__
            //, bump
            , ringprobe
            , cellprobe
            , testprobe
           );

Dist1: DISTRIBUTION, TYPE=fromfile, FNAME="__beamfile__", INPUTMOUNITS=NONE;

Fs1:FIELDSOLVER, FSTYPE=__solver__, MX=__mx__, MY=__my__, MT=__mt__,
                 PARFFTX=true, PARFFTY=false, PARFFTT=false,
                 BCFFTX=open, BCFFTY=open, BCFFTT=open,BBOXINCR=2;

beam1: BEAM, PARTICLE=PROTON, pc=P0, NPART=__n_events__, BCURRENT=__current__, CHARGE=1.0, BFREQ=BFREQ;

TRACK, LINE=l1, BEAM=beam1, MAXSTEPS=MAX_STEPS, STEPSPERTURN=STEPS_PER_TURN;
RUN, METHOD="CYCLOTRON-T", BEAM=beam1, FIELDSOLVER=Fs1, DISTRIBUTION=Dist1;
ENDTRACK;
STOP;

